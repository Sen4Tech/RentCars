@{
    ViewData["Title"] = "Home";
}

<!DOCTYPE html>
<html>
<head>
    <title>RentCar</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"></script>
       <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f4f7fe;
            color: #4a5568;
        }

        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1.5rem;
        }

        h1 {
            text-align: center;
            color: #2d3748;
            margin: 2rem 0;
            font-size: 2.5rem;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 2px;
            position: relative;
            margin-top: 10%;
        }

        h1::after {
            content: '';
            display: block;
            width: 100px;
            height: 4px;
            background: linear-gradient(90deg, #4f46e5, #6366f1);
            margin: 1rem auto;
            border-radius: 2px;
        }

        .search-box {
            background: white;
            padding: 2rem;
            border-radius: 16px;
            display: grid;
            grid-template-columns: repeat(3, 1fr) auto;
            gap: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(229, 231, 235, 0.5);
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .form-group label {
            font-weight: 500;
            color: #4f46e5;
            font-size: 0.95rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .form-group input,
        .form-group select {
            padding: 0.75rem 1rem;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            background: white;
            color: #2d3748;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: #4f46e5;
            box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.2);
        }

        .cari-btn {
            padding: 0.75rem 2rem;
            background: linear-gradient(90deg, #4f46e5, #6366f1);
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            color: white;
            text-transform: uppercase;
            letter-spacing: 1px;
            align-self: flex-end;
            transition: all 0.3s ease;
        }

        .cari-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(79, 70, 229, 0.3);
        }

        .sort-section {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            gap: 1rem;
            margin: 1.5rem 0;
            padding: 1rem;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .sort-section span {
            color: #4f46e5;
            font-size: 0.95rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        #sortOption {
            padding: 0.5rem 1rem;
            border: 1px solid #e2e8f0;
            border-radius: 6px;
            background: white;
            color: #2d3748;
        }

        .car-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 2rem;
            margin-top: 2rem;
        }

        .car-card {
            background: white;
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(229, 231, 235, 0.5);
            transition: all 0.3s ease;
        }

        .car-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 48px rgba(0, 0, 0, 0.12);
        }

        .car-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-bottom: 2px solid #4f46e5;
        }

        .car-details {
            padding: 1.5rem;
        }

        .car-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 1rem;
        }

        .car-price {
            color: #4f46e5;
            font-size: 1.1rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 600;
        }

        .rent-btn {
            display: block;
            background: linear-gradient(90deg, #4f46e5, #6366f1);
            color: white;
            text-align: center;
            padding: 0.75rem;
            border-radius: 8px;
            text-decoration: none;
            text-transform: uppercase;
            font-weight: 600;
            letter-spacing: 1px;
            transition: all 0.3s ease;
        }

        .button-group a {
            text-decoration: none;
        }

        
        .button-group a:hover {
            color: cyan;
        }


        .rent-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(79, 70, 229, 0.3);
        }

     .ui-datepicker {
            background-color: white;
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            width: 360px;
        }

        .ui-datepicker-header {
            background-color: #6c5ce7;
            color: white;
            border-radius: 8px;
            margin-bottom: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: relative;
            padding: 20px;
        }

        .ui-datepicker-title {
            font-weight: 600;
            font-size: 18px;
            text-align: center;
            flex-grow: 1;
        }

        .ui-datepicker-prev,
        .ui-datepicker-next {
            width: 32px;
            height: 32px;
            cursor: pointer;
            border-radius: 50%;
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
        }

        .ui-datepicker-prev:hover,
        .ui-datepicker-next:hover {
            background-color: rgba(255, 255, 255, 0.3);
            transform: scale(1.1);
        }

        .ui-datepicker-prev::before,
        .ui-datepicker-next::before {
            content: '';
            width: 10px;
            height: 10px;
            border-style: solid;
            border-width: 2px 2px 0 0;
            display: inline-block;
            position: relative;
        }

        .ui-datepicker-prev::before {
            transform: rotate(-135deg);
            right: -2px;
        }

        .ui-datepicker-next::before {
            transform: rotate(45deg);
            left: -2px;
        }

        .ui-datepicker-prev span,
        .ui-datepicker-next span {
            display: none;
        }

        .ui-datepicker-calendar {
            width: 100%;
            border-collapse: separate;
            border-spacing: 3px;
        }

        .ui-datepicker-calendar th {
            padding: 12px 8px;
            background-color: #f8f9fa;
            color: #666;
            font-weight: 500;
            font-size: 14px;
        }

        .ui-datepicker-calendar td {
            padding: 2px;
            text-align: center;
        }

        .ui-datepicker-calendar a {
            text-decoration: none;
            color: #444;
            display: block;
            padding: 10px;
            border-radius: 6px;
            transition: all 0.2s;
            font-size: 15px;
        }

        .ui-datepicker-calendar a:hover {
            background-color: #f0f0f0;
        }

        .ui-datepicker-calendar .ui-state-highlight {
            background-color: #6c5ce7;
            color: white;
            font-weight: 500;
        }

        .ui-datepicker-calendar .ui-state-active {
            background-color: #4834d4;
            color: white;
            font-weight: 500;
            box-shadow: 0 2px 4px rgba(72, 52, 212, 0.2);
        }

        .ui-datepicker-calendar .ui-state-disabled {
            color: #ccc;
            cursor: not-allowed;
        }

        .ui-datepicker-calendar tr td:nth-child(6) a,
        .ui-datepicker-calendar tr td:nth-child(7) a {
            color: #e74c3c;
        }

        .ui-datepicker-calendar td:not(.ui-state-disabled) a:hover {
            background-color: #f0f0f0;
            transform: scale(1.1);
            transition: all 0.2s ease;
        }

        .pagination {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin: 20px 0;
    padding: 10px;
}

.page-btn {
    padding: 8px 16px;
    border: 1px solid #ddd;
    background: white;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.2s;
}

.page-btn:hover {
    background-color: #f0f0f0;
}

.page-btn.active {
    background-color: #4834d4;
    color: white;
    border-color: #4834d4;
}

.no-image-placeholder {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f5f5f5;
    color: #999;
}
    </style>
</head>
<body>
    <div class="container">
        <h1>Selamat Datang Di Rental Kami</h1>
        
        <div class="search-box">
            <div class="form-group">
                <label>Pickup Date</label>
                <input type="text" id="pickupDate" placeholder="Select Pickup Date" readonly>
            </div>
            
            <div class="form-group">
                <label>Return Date</label>
                <input type="text" id="returnDate" placeholder="Select Return Date" readonly>
            </div>
            
            <div class="form-group">
                <label>Manufacturing Year</label>
            <select  select id="yearFilter">
                <option value="">All Years</option>
                <option value="2019">2019</option>
                <option value="2018">2018</option>
                <option value="2017">2017</option>
                <option value="2016">2016</option>
                <option value="2015">2015</option>
            </select>
            </div>
            
            <button class="cari-btn" id="searchButton">Search</button>
        </div>

        <div class="sort-section">
            <span>Sort By:</span>
            <select id="sortOption">
                <option value="price-low">Price: Low to High</option>
                <option value="price-high">Price: High to Low</option>
                <option value="year-new">Newest Year</option>
                <option value="year-old">Oldest Year</option>
            </select>
        </div>

        <div class="car-grid" id="carContainer"></div>
        <div id="paginationContainer"></div>
    </div>

    <script>
const app = {
    carData: [],
    filteredData: [],
    currentPage: 1,
    selectedYear: '',

    async init() {
        await this.loadCars();
        this.initDatePickers();
        this.initEventListeners();
    },
    
    

    async loadCars() {
        try {
            const response = await fetch('/Car/GetCar');
            const result = await response.json();
            
            if (result.statusCode === 200 && result.data) {
                this.carData = result.data;
                this.filteredData = [...this.carData];
                this.renderCars();
            } else {
                console.error('Error loading cars:', result.message);
                alert('Failed to load cars. Please try again.');
            }
        } catch (error) {
            console.error('Error loading cars:', error);
            alert('Failed to load cars. Please try again.');
        }
    },


    initDatePickers() {
        $("#pickupDate").datepicker({
            dateFormat: 'dd/mm/yy',
            minDate: 0,
            onSelect: function(selectedDate) {
                $("#returnDate").datepicker("option", "minDate", selectedDate);
            }
        });

        $("#returnDate").datepicker({
            dateFormat: 'dd/mm/yy',
            minDate: 0
        });
    },

    initEventListeners() {
        $("#searchButton").on("click", () => this.handleSearch());
        $("#sortOption").on("change", () => this.handleSort());
        $("#yearFilter").on("change", (e) => {
            this.selectedYear = e.target.value;
            this.currentPage = 1;
            this.filterAndRenderCars();
        });
        
        $(document).on("click", ".rent-btn", (e) => this.handleRentClick(e));
        $(document).on("click", ".delete-btn", (e) => this.handleDeleteClick(e));
        $(document).on("click", ".page-btn", (e) => {
            e.preventDefault();
            const pageNum = parseInt($(e.currentTarget).data('page'));
            this.currentPage = pageNum;
            this.renderCars();
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });
    },

    filterAndRenderCars() {
        if (this.selectedYear) {
            this.filteredData = this.carData.filter(car => 
                car.year.toString() === this.selectedYear
            );
        } else {
            this.filteredData = [...this.carData];
        }

        const pickupDate = $("#pickupDate").val();
        const returnDate = $("#returnDate").val();
        

        
        this.renderCars();
    },

    formatNumber(num) {
        return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
    },

    renderCars() {
        const container = $("#carContainer");
        container.empty();
        
        const carsPerPage = 20;
        const totalPages = Math.ceil(this.filteredData.length / carsPerPage);
        
        if (this.currentPage > totalPages) {
            this.currentPage = Math.max(1, totalPages);
        }
        
        const startIndex = (this.currentPage - 1) * carsPerPage;
        const endIndex = startIndex + carsPerPage;
        const carsToShow = this.filteredData.slice(startIndex, endIndex);


carsToShow.forEach(car => {
    console.log(car)
    const imageUrl = car.image_link || '';
    const carCard = `
        <div class="car-card">
            <div class="car-image-container">
                ${imageUrl ? `
                    <img 
                        src="${imageUrl}" 
                        alt="${car.name || 'Car Image'}" 
                        class="car-image"
                        onerror="this.onerror=null; this.src='http://example.com/${car.imageUrl}'; this.classList.add('error-image');"
                    >
                ` : '<div class="no-image-placeholder">No Image Available</div>'}
            </div>
            <div class="car-details">
                <div class="car-title">${car.name || 'Unnamed Car'} AT ${car.year || 'N/A'}</div>
                <div class="car-price">Rp ${this.formatNumber(car.price_per_day || 0)} / hari</div>
                <div class="button-group">
                    <a href="#" class="rent-btn" data-car-id="${car.id}">Sewa Sekarang</a>
                </div>
            </div>
        </div>
    `;
    container.append(carCard);
});

        if (totalPages > 1) {
            const paginationContainer = $("#paginationContainer");
            paginationContainer.empty();

            const pagination = `
                <div class="pagination">
                    ${Array.from({ length: totalPages }, (_, i) => i + 1)
                        .map(pageNum => `
                            <button class="page-btn ${pageNum === this.currentPage ? 'active' : ''}" 
                                    data-page="${pageNum}">
                                ${pageNum}
                            </button>
                        `).join('')}
                </div>
            `;
            paginationContainer.html(pagination);
        }
    },

    async handleRentClick(e) {
        e.preventDefault();
        const carId = $(e.currentTarget).data('car-id');
        const pickupDate = $("#pickupDate").val();
        const returnDate = $("#returnDate").val();

        if (!pickupDate || !returnDate) {
            alert('Please select pickup and return dates');
            return;
        }

        try {
            const rentData = {
                carId: carId,
                pickupDate: pickupDate,
                returnDate: returnDate
            };

            const response = await fetch('/Car/CreateCar', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(rentData)
            });

            const result = await response.json();
            if (result.statusCode === 200) {
                alert('Car rented successfully!');
                await this.loadCars();
            } else {
                alert(result.message || 'Failed to rent car. Please try again.');
            }
        } catch (error) {
            console.error('Error renting car:', error);
            alert('Failed to rent car. Please try again.');
        }
    },

    async handleDeleteClick(e) {
        e.preventDefault();
        const carId = $(e.currentTarget).data('car-id');
        
        if (confirm('Are you sure you want to delete this car?')) {
            try {
                const response = await fetch(`/Car/DeleteCar?id=${carId}`, {
                    method: 'POST'
                });

                const result = await response.json();
                if (result.statusCode === 200) {
                    alert('Car deleted successfully!');
                    await this.loadCars();
                } else {
                    alert(result.message || 'Failed to delete car. Please try again.');
                }
            } catch (error) {
                console.error('Error deleting car:', error);
                alert('Failed to delete car. Please try again.');
            }
        }
    },

    handleSearch() {
        this.currentPage = 1;
        this.filterAndRenderCars();
    },

    handleSort() {
        const sortValue = $("#sortOption").val();
        
        switch (sortValue) {
            case "price-low":
                this.filteredData.sort((a, b) => a.price_per_day - b.price_per_day);
                break;
            case "price-high":
                this.filteredData.sort((a, b) => b.price_per_day - a.price_per_day);
                break;
            case "year-new":
                this.filteredData.sort((a, b) => b.year - a.year);
                break;
            case "year-old":
                this.filteredData.sort((a, b) => a.year - b.year);
                break;
        }

        this.currentPage = 1;
        this.renderCars();
    }
};

$(document).ready(() => app.init());
    </script>
</body>
</html>